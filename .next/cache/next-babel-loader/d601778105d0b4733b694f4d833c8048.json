{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"D:\\\\next\\\\blog\\\\pages\\\\show\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport fs from \"fs\";\nexport var __N_SSG = true;\nexport function getAllPostIds() {\n  var fileNames = fs.readdirSync(showDirectory);\n  return fileNames.map(function (fileName) {\n    return {\n      params: {\n        id: fileName.replace(/\\.md$/, \"\")\n      }\n    };\n  });\n}\n\nfunction Show(_ref) {\n  var data = _ref.data;\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }\n  }, \"data\");\n}\n\n_c = Show;\n\nShow.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var paths, id, res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            paths = getAllPostIds();\n            id = context.query.id;\n            _context.next = 4;\n            return axios.get(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.data;\n\n          case 7:\n            data = _context.sent;\n            console.log(paths);\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Show;\n\nvar _c;\n\n$RefreshReg$(_c, \"Show\");","map":{"version":3,"sources":["D:/next/blog/pages/show/[id].js"],"names":["Link","axios","fs","getAllPostIds","fileNames","readdirSync","showDirectory","map","fileName","params","id","replace","Show","data","getInitialProps","context","paths","query","get","res","console","log"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC9B,MAAMC,SAAS,GAAGF,EAAE,CAACG,WAAH,CAAeC,aAAf,CAAlB;AACA,SAAOF,SAAS,CAACG,GAAV,CAAc,UAACC,QAAD,EAAc;AACjC,WAAO;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAEF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B;AADE;AADH,KAAP;AAKD,GANM,CAAP;AAOD;;AACD,SAASC,IAAT,OAAwB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAJ,CAAP;AACD;;KAFQD,I;;AAITA,IAAI,CAACE,eAAL;AAAA,uEAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,KADe,GACPb,aAAa,EADN;AAEbO,YAAAA,EAFa,GAENK,OAAO,CAACE,KAFF,CAEbP,EAFa;AAAA;AAAA,mBAGHT,KAAK,CAACiB,GAAN,wCAA0CR,EAA1C,EAHG;;AAAA;AAGfS,YAAAA,GAHe;AAAA;AAAA,mBAIFA,GAAG,CAACN,IAJF;;AAAA;AAIfA,YAAAA,IAJe;AAKrBO,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AALqB,6CAMd;AACLH,cAAAA,IAAI,EAAEA;AADD,aANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAmBA,eAAeD,IAAf","sourcesContent":["import Link from \"next/link\";\r\nimport axios from \"axios\";\r\nimport fs from \"fs\";\r\n\r\nexport function getAllPostIds() {\r\n  const fileNames = fs.readdirSync(showDirectory);\r\n  return fileNames.map((fileName) => {\r\n    return {\r\n      params: {\r\n        id: fileName.replace(/\\.md$/, \"\"),\r\n      },\r\n    };\r\n  });\r\n}\r\nfunction Show({ data }) {\r\n  return <p>{\"data\"}</p>;\r\n}\r\n\r\nShow.getInitialProps = async (context) => {\r\n  const paths = getAllPostIds();\r\n  const { id } = context.query;\r\n  const res = await axios.get(`https://api.tvmaze.com/shows/${id}`);\r\n  const data = await res.data;\r\n  console.log(paths);\r\n  return {\r\n    data: data,\r\n  };\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  const paths = getAllPostIds();\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport default Show;\r\n"]},"metadata":{},"sourceType":"module"}